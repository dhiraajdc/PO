{
	"swagger": "2.0",
	"info": {
		"version": "0.0.1",
		"title": "Supply Chain Finance"
	},
	"host": "localhost:10010",
	"basePath": "/",
	"tags": [
		{
			"name": "Purchase Order",
			"description": "Operations to add, delete and update Purchase Order"
		}
	],
	"schemes": [
		"http",
		"https"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json"
	],
	"paths": {
		"/purchaseorder": {
			"x-swagger-router-controller": "PurchaseOrder",
			"get": {
				"tags": [
					"Purchase Order"
				],
				"description": "Returns all purchase order details",
				"operationId": "getPurchaseOrder",
				"parameters": [
					{
						"name": "poNumber",
						"description": "Purchase order Number",
						"type": "integer",
						"in": "query",
						"required": false
					},
					{
						"name": "sortBy",
						"in": "query",
						"description": "sort by query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchBy",
						"in": "query",
						"description": "search by query",
						"required": false,
						"type": "string"
					},
					{
						"name": "page",
						"in": "query",
						"description": "pagination query",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PurchaseOrder"
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Purchase Order"
				],
				"description": "Returns all purchase order details",
				"operationId": "deletePurchaseOrder",
				"parameters": [
					{
						"name": "poNumber",
						"description": "Purchase order Number",
						"type": "integer",
						"in": "query",
						"required": true
					}
				],
				"responses": {
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"post": {
				"tags": [
					"Purchase Order"
				],
				"description": "add a new purchase order detail",
				"operationId": "createPurchaseOrder",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "order placed for purchasing the product",
						"required": true,
						"schema": {
							"$ref": "#/definitions/PurchaseOrder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"405": {
						"description": "Invalid input",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"409": {
						"description": "Conflict",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Purchase Order"
				],
				"description": "Update Purchase order details",
				"operationId": "updatePurchaseOrder",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "update purchase order details",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdatePurchaseOrder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"405": {
						"description": "Validation exception",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"patch": {
				"tags": [
					"Purchase Order"
				],
				"description": "Update single entity of Purchase Order",
				"operationId": "updateSinglePurchaseOrder",
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "Update single entry",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UpdatePurchaseOrder"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Success",
						"schema": {
							"$ref": "#/definitions/ApiResponse"
						}
					},
					"400": {
						"description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "Not Found",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"405": {
						"description": "Validation exception",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/swagger": {
			"x-swagger-pipe": "swagger_raw"
		}
	},
	"definitions": {
		"UpdatePurchaseOrder": {
			"type": "object",
			"properties": {
				"condition": {
					"$ref": "#/definitions/poCondition"
				},
				"update": {
					"$ref": "#/definitions/PurchaseOrder"
				}
			},
			"xml": {
				"name": "UpdatePurchaseOrder"
			}
		},
		"poCondition": {
			"type": "object",
			"required": [
				"poNumber"
			],
			"properties": {
				"poNumber": {
					"type": "integer",
					"format": "int64"
				}
			},
			"xml": {
				"name": "poCondition"
			}
		},
		"ProductDetails": {
			"type": "object",
			"properties": {
				"product": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"unit": {
					"type": "string"
				},
				"qty": {
					"type": "integer"
				},
				"unitPrice": {
					"type": "integer"
				},
				"totalPrice": {
					"type": "integer"
				},
				"taxCode": {
					"type": "string"
				}
			},
			"xml": {
				"name": "ProductDetails"
			}
		},
		"PurchaseOrder": {
			"type": "object",
			"properties": {
				"manufacturerName": {
					"type": "string"
				},
				"orderid": {
					"type": "integer",
					"format": "int64"
				},
				"poNumber": {
					"type": "integer",
					"format": "int64"
				},
				"createDate": {
					"type": "string",
					"format": "date-time"
				},
				"issueDate": {
					"type": "string",
					"format": "date-time"
				},
				"supplierName": {
					"type": "string"
				},
				"supplierAddrs": {
					"type": "string"
				},
				"delivryAddrs": {
					"type": "string",
					"description": "Organisation ID"
				},
				"billingAddrs": {
					"type": "string"
				},
				"ProductDetails": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ProductDetails"
					}
				},
				"grndTotal": {
					"type": "integer"
				},
				"advPaymnt": {
					"type": "integer"
				},
				"netPayable": {
					"type": "integer"
				},
				"amtInWords": {
					"type": "string"
				},
				"status": {
					"type": "string",
					"description": "Order Status",
					"enum": [
						"approved",
						"rejected"
					]
				}
			},
			"example": {
				"manufacturerName": "manufacturerName",
				"supplierName": "supplierName",
				"unitPrice": 5,
				"supplierAddrs": "supplierAddrs",
				"product": "product",
				"netPayable": 9,
				"orderid": 0,
				"amtInWords": "amtInWords",
				"advPaymnt": 7,
				"description": "description",
				"taxCode": "taxCode",
				"unit": "unit",
				"qty": 1,
				"grndTotal": 2,
				"delivryAddrs": "delivryAddrs",
				"totalPrice": 5,
				"issueDate": "2000-01-23T04:56:07.000+00:00",
				"poNumber": 6,
				"createDate": "2000-01-23T04:56:07.000+00:00",
				"billingAddrs": "billingAddrs",
				"status": "approved"
			},
			"xml": {
				"name": "PurchaseOrder"
			}
		},
		"ApiResponse": {
			"type": "object",
			"properties": {
				"code": {
					"type": "integer",
					"format": "int32"
				},
				"type": {
					"type": "string"
				},
				"message": {
					"type": "string"
				}
			},
			"example": {
				"code": 0,
				"type": "type",
				"message": "message"
			}
		},
		"ErrorResponse": {
			"required": [
				"message"
			],
			"properties": {
				"message": {
					"type": "string"
				}
			}
		}
	}
}